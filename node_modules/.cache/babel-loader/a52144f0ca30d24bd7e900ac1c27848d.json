{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\linq-up\\\\src\\\\components\\\\Application.jsx\";\nimport React, { Component, StrictMode } from \"react\";\nimport PersonList from './PersonList';\nimport Person from './Person';\n\nclass Application extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      people: [/*#__PURE__*/React.createElement(Person, {\n        key: \"1\",\n        value: \"1\",\n        onHandleChange: () => this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Person, {\n        key: \"2\",\n        value: \"2\",\n        onHandleChange: () => this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Person, {\n        key: \"3\",\n        value: \"3\",\n        onHandleChange: () => this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }\n      })],\n      addressess: [\"\", \"\", \"\"]\n    };\n\n    this.handleChange = (evt, val) => {\n      console.log(\"WORKING\");\n      let ev = evt.target.value;\n      let newAddresses = this.state.addressess;\n      newAddresses[val] = ev;\n      this.setState({\n        addresses: newAddresses\n      });\n    };\n\n    this.handleAddPerson = () => {\n      this.setState({\n        people: [...this.state.people, /*#__PURE__*/React.createElement(Person, {\n          key: this.state.people.length + 1,\n          value: this.state.people.length + 1,\n          address: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }\n        })]\n      });\n    };\n\n    this.handleDeletePerson = () => {\n      let people = this.state.people.slice(0, -1);\n      this.setState({\n        people: people\n      });\n    };\n\n    this.propChecker = () => {\n      let b = this.state.people;\n      b[0].props.address = \"LOL\";\n      this.setState({\n        people: b\n      }); //console.log(this.state.people[0].props.address)\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Linq\"), /*#__PURE__*/React.createElement(PersonList, {\n      people: this.state.people,\n      onAddPerson: () => this.handleAddPerson(),\n      onDeletePerson: () => this.handleDeletePerson(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.propChecker,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Calculate\"));\n  }\n\n}\n\nexport default Application;","map":{"version":3,"sources":["C:/Users/Alex/linq-up/src/components/Application.jsx"],"names":["React","Component","StrictMode","PersonList","Person","Application","state","people","handleChange","addressess","evt","val","console","log","ev","target","value","newAddresses","setState","addresses","handleAddPerson","length","handleDeletePerson","slice","propChecker","b","props","address","render"],"mappings":"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","sourcesContent":["import React, { Component, StrictMode } from \"react\";\r\nimport PersonList from './PersonList';\r\nimport Person from './Person';\r\n\r\n\r\nclass Application extends Component {\r\n\r\n    \r\n    state = { \r\n\r\n        people: [\r\n            <Person key=\"1\" value=\"1\" onHandleChange = {()=>this.handleChange}></Person>,\r\n            <Person key=\"2\" value=\"2\" onHandleChange = {()=>this.handleChange}></Person>,\r\n            <Person key=\"3\" value=\"3\" onHandleChange = {()=>this.handleChange}></Person>,\r\n          ],\r\n        addressess: [\r\n            \"\",\"\",\"\"\r\n        ]\r\n        \r\n\r\n     }\r\n\r\n\r\n    handleChange = (evt, val) => {\r\n        console.log(\"WORKING\");\r\n        let ev = evt.target.value;\r\n        let newAddresses = this.state.addressess;\r\n        newAddresses[val] = ev;\r\n        this.setState({addresses:newAddresses})\r\n    }\r\n    \r\n\r\n    handleAddPerson = () => {\r\n\r\n        this.setState({\r\n          people: [\r\n            ...this.state.people,\r\n            <Person\r\n              key={this.state.people.length + 1}\r\n              value={this.state.people.length + 1}\r\n              address=\"\"\r\n            ></Person>,\r\n          ],\r\n        });\r\n      };\r\n\r\n    handleDeletePerson = () => {\r\n        let people = this.state.people.slice(0, -1);\r\n        this.setState({\r\n          people: people,\r\n        });\r\n      };\r\n\r\n    propChecker = () => {\r\n        let b = this.state.people\r\n        b[0].props.address = \"LOL\"\r\n        this.setState({people:b})\r\n        //console.log(this.state.people[0].props.address)\r\n\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h1>Linq</h1>\r\n                <PersonList\r\n                people = {this.state.people} \r\n                onAddPerson = {()=>this.handleAddPerson()}\r\n                onDeletePerson = {()=>this.handleDeletePerson()}></PersonList>\r\n\r\n                <button onClick={this.propChecker}>Calculate</button>\r\n                \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Application;"]},"metadata":{},"sourceType":"module"}