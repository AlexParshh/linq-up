{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Alex\\\\linq-up\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Alex\\\\linq-up\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\Alex\\\\linq-up\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Alex\\\\linq-up\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import GooglePlacesAutocomplete from\"react-google-places-autocomplete\";require(\"dotenv\").config();var Person=/*#__PURE__*/function(_Component){_inherits(Person,_Component);var _super=_createSuper(Person);function Person(){var _this;_classCallCheck(this,Person);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={emailClassName:\"form-control\"};_this.checkEmail=function(email){if(email===\"\"){_this.setState({emailClassName:\"form-control\"});return;}var re=/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;if(re.test(String(email).toLowerCase())){_this.setState({emailClassName:\"form-control is-valid\"});}else{_this.setState({emailClassName:\"form-control is-invalid\"});}};return _this;}_createClass(Person,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{style:{width:\"400px\"}},/*#__PURE__*/React.createElement(\"h4\",{style:{margin:\"5px\"}},/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-secondary\"},\"Person #\",this.props.value)),/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(GooglePlacesAutocomplete,{inputStyle:{width:\"400px\",margin:\"5px\"},inputClassName:\"form-control\",placeholder:\"Address\",apiKey:process.env.REACT_APP_GOOGLE_MAPS_API_KEY,onSetAddress:this.props.onSetAddress,onSelect:function onSelect(_ref){var description=_ref.description;return _this2.props.onSetAddress(description,_this2.props.value);},renderSuggestions:function renderSuggestions(active,suggestions,onSelectSuggestion){return/*#__PURE__*/React.createElement(\"div\",{className:\"list-group\"},suggestions.map(function(suggestion,idx){return/*#__PURE__*/React.createElement(\"button\",{style:{width:\"400px\",margin:\"5px\"},type:\"button\",key:idx,className:\"list-group-item list-group-item-action\",onClick:function onClick(event){return onSelectSuggestion(suggestion,event);}},suggestion.description);}));}}),/*#__PURE__*/React.createElement(\"input\",{id:this.props.value,className:this.state.emailClassName,style:{width:\"400px\",margin:\"5px\"},type:\"text\",placeholder:\"Email\",onChange:function onChange(e){_this2.checkEmail(e.target.value);_this2.props.onSetEmail(e.target.value,_this2.props.value);}})));}}]);return Person;}(Component);export default Person;","map":{"version":3,"sources":["C:/Users/Alex/linq-up/src/components/Person.jsx"],"names":["React","Component","GooglePlacesAutocomplete","require","config","Person","state","emailClassName","checkEmail","email","setState","re","test","String","toLowerCase","width","margin","props","value","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","onSetAddress","description","active","suggestions","onSelectSuggestion","map","suggestion","idx","event","e","target","onSetEmail"],"mappings":"gkBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,wBAAP,KAAqC,kCAArC,CACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,G,GAEMC,CAAAA,M,2TACJC,K,CAAQ,CACNC,cAAc,CAAE,cADV,C,OAIRC,U,CAAa,SAACC,KAAD,CAAW,CACtB,GAAIA,KAAK,GAAK,EAAd,CAAkB,CAChB,MAAKC,QAAL,CAAc,CAAEH,cAAc,CAAE,cAAlB,CAAd,EACA,OACD,CAED,GAAMI,CAAAA,EAAE,CAAG,uJAAX,CAEA,GAAIA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACJ,KAAD,CAAN,CAAcK,WAAd,EAAR,CAAJ,CAA0C,CACxC,MAAKJ,QAAL,CAAc,CAAEH,cAAc,CAAE,uBAAlB,CAAd,EACD,CAFD,IAEO,CACL,MAAKG,QAAL,CAAc,CAAEH,cAAc,CAAE,yBAAlB,CAAd,EACD,CACF,C,yEAEQ,iBACP,mBACE,2BAAK,KAAK,CAAE,CAAEQ,KAAK,CAAE,OAAT,CAAZ,eACE,0BAAI,KAAK,CAAE,CAAEC,MAAM,CAAE,KAAV,CAAX,eACE,4BAAM,SAAS,CAAC,uBAAhB,aACW,KAAKC,KAAL,CAAWC,KADtB,CADF,CADF,cAOE,6CACE,oBAAC,wBAAD,EACE,UAAU,CAAE,CAAEH,KAAK,CAAE,OAAT,CAAkBC,MAAM,CAAE,KAA1B,CADd,CAEE,cAAc,CAAC,cAFjB,CAGE,WAAW,CAAC,SAHd,CAIE,MAAM,CAAEG,OAAO,CAACC,GAAR,CAAYC,6BAJtB,CAKE,YAAY,CAAE,KAAKJ,KAAL,CAAWK,YAL3B,CAME,QAAQ,CAAE,2BAAGC,CAAAA,WAAH,MAAGA,WAAH,OACR,CAAA,MAAI,CAACN,KAAL,CAAWK,YAAX,CAAwBC,WAAxB,CAAqC,MAAI,CAACN,KAAL,CAAWC,KAAhD,CADQ,EANZ,CASE,iBAAiB,CAAE,2BAACM,MAAD,CAASC,WAAT,CAAsBC,kBAAtB,qBACjB,2BAAK,SAAS,CAAC,YAAf,EACGD,WAAW,CAACE,GAAZ,CAAgB,SAACC,UAAD,CAAaC,GAAb,qBACf,8BACE,KAAK,CAAE,CAAEd,KAAK,CAAE,OAAT,CAAkBC,MAAM,CAAE,KAA1B,CADT,CAEE,IAAI,CAAC,QAFP,CAGE,GAAG,CAAEa,GAHP,CAIE,SAAS,CAAC,wCAJZ,CAKE,OAAO,CAAE,iBAACC,KAAD,QAAWJ,CAAAA,kBAAkB,CAACE,UAAD,CAAaE,KAAb,CAA7B,EALX,EAOGF,UAAU,CAACL,WAPd,CADe,EAAhB,CADH,CADiB,EATrB,EADF,cA0BE,6BACE,EAAE,CAAE,KAAKN,KAAL,CAAWC,KADjB,CAEE,SAAS,CAAE,KAAKZ,KAAL,CAAWC,cAFxB,CAGE,KAAK,CAAE,CAAEQ,KAAK,CAAE,OAAT,CAAkBC,MAAM,CAAE,KAA1B,CAHT,CAIE,IAAI,CAAC,MAJP,CAKE,WAAW,CAAC,OALd,CAME,QAAQ,CAAE,kBAACe,CAAD,CAAO,CACf,MAAI,CAACvB,UAAL,CAAgBuB,CAAC,CAACC,MAAF,CAASd,KAAzB,EACA,MAAI,CAACD,KAAL,CAAWgB,UAAX,CAAsBF,CAAC,CAACC,MAAF,CAASd,KAA/B,CAAsC,MAAI,CAACD,KAAL,CAAWC,KAAjD,EACD,CATH,EA1BF,CAPF,CADF,CAgDD,C,oBArEkBjB,S,EAwErB,cAAeI,CAAAA,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\r\nrequire(\"dotenv\").config();\r\n\r\nclass Person extends Component {\r\n  state = {\r\n    emailClassName: \"form-control\",\r\n  };\r\n\r\n  checkEmail = (email) => {\r\n    if (email === \"\") {\r\n      this.setState({ emailClassName: \"form-control\" });\r\n      return;\r\n    }\r\n\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    if (re.test(String(email).toLowerCase())) {\r\n      this.setState({ emailClassName: \"form-control is-valid\" });\r\n    } else {\r\n      this.setState({ emailClassName: \"form-control is-invalid\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"400px\" }}>\r\n        <h4 style={{ margin: \"5px\" }}>\r\n          <span className=\"badge badge-secondary\">\r\n            Person #{this.props.value}\r\n          </span>\r\n        </h4>\r\n\r\n        <form>\r\n          <GooglePlacesAutocomplete\r\n            inputStyle={{ width: \"400px\", margin: \"5px\" }}\r\n            inputClassName=\"form-control\"\r\n            placeholder=\"Address\"\r\n            apiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}\r\n            onSetAddress={this.props.onSetAddress}\r\n            onSelect={({ description }) =>\r\n              this.props.onSetAddress(description, this.props.value)\r\n            }\r\n            renderSuggestions={(active, suggestions, onSelectSuggestion) => (\r\n              <div className=\"list-group\">\r\n                {suggestions.map((suggestion, idx) => (\r\n                  <button\r\n                    style={{ width: \"400px\", margin: \"5px\" }}\r\n                    type=\"button\"\r\n                    key={idx}\r\n                    className=\"list-group-item list-group-item-action\"\r\n                    onClick={(event) => onSelectSuggestion(suggestion, event)}\r\n                  >\r\n                    {suggestion.description}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n          ></GooglePlacesAutocomplete>\r\n          <input\r\n            id={this.props.value}\r\n            className={this.state.emailClassName}\r\n            style={{ width: \"400px\", margin: \"5px\" }}\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            onChange={(e) => {\r\n              this.checkEmail(e.target.value);\r\n              this.props.onSetEmail(e.target.value, this.props.value);\r\n            }}\r\n          ></input>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Person;\r\n"]},"metadata":{},"sourceType":"module"}