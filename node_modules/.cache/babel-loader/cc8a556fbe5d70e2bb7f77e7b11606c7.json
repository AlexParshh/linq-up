{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Alex\\\\linq-up\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Alex\\\\linq-up\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\Alex\\\\linq-up\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Alex\\\\linq-up\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Map,Marker,GoogleApiWrapper,InfoWindow,Circle}from\"google-maps-react\";require(\"dotenv\").config();export var MapContainer=/*#__PURE__*/function(_Component){_inherits(MapContainer,_Component);var _super=_createSuper(MapContainer);function MapContainer(){var _this;_classCallCheck(this,MapContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={showingInfoWindow:false,activeMarker:{},selectedPlace:{},currentPhoto:\"\",circleLat:_this.props.circleLat,circleLng:_this.props.circleLng};_this.displayMarkers=function(){return _this.props.coords.map(function(address,index){return/*#__PURE__*/React.createElement(Marker,{onClick:_this.onMarkerClick,key:index,id:index,name:/*#__PURE__*/React.createElement(\"h4\",null,_this.props.addresses[index]),pos:{lat:address.lat,lng:address.lng},position:{lat:address.lat,lng:address.lng}});});};_this.displayPlacesMarkers=function(){var coordsPlaces=[];var placesNames=[];var ratings=[];var photos=[];for(var i=0;i<_this.props.nearbyPlaces.length;i++){coordsPlaces.push(_this.props.nearbyPlaces[i].geometry.location);placesNames.push(_this.props.nearbyPlaces[i].name);ratings.push(_this.props.nearbyPlaces[i].rating);//if this.props.nearbyPlaces.photos[0]\n//handles no photo error\nif(_this.props.nearbyPlaces[i].photos){photos.push(\"https://maps.googleapis.com/maps/api/place/photo?maxwidth=200&maxheight=200&photoreference=\"+_this.props.nearbyPlaces[i].photos[0].photo_reference+\"&key=\"+process.env.REACT_APP_GOOGLE_MAPS_API_KEY);}else{photos.push(\"https://static.thenounproject.com/png/1339059-200.png\");}}return coordsPlaces.map(function(address,index){return/*#__PURE__*/React.createElement(Marker,{onClick:_this.onMarkerClick,photo:photos[index],key:\"p\"+index,id:\"place\",rating:ratings[index],name:/*#__PURE__*/React.createElement(\"h4\",null,placesNames[index]),cleanName:placesNames[index],position:{lat:address.lat,lng:address.lng},pos:{lat:address.lat,lng:address.lng},icon:{url:\"http://maps.google.com/mapfiles/ms/icons/ltblue-dot.png\"}});});};_this.onMarkerClick=function(props,marker){_this.setState({selectedPlace:props,activeMarker:marker,showingInfoWindow:true});_this.props.onSetMeetupPoint(_this.state.activeMarker.pos);if(_this.state.activeMarker.cleanName){_this.props.onSetMeetName(_this.state.activeMarker.cleanName);}};_this.onClose=function(props){if(_this.state.showingInfoWindow){_this.setState({showingInfoWindow:false});_this.props.onSetMeetupPoint({lat:_this.props.midpoint[0],lng:_this.props.midpoint[1]});_this.props.onSetMeetName(\"\");}};return _this;}_createClass(MapContainer,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.circleLat!==this.state.circleLat){this.setState({circleLat:this.props.circleLat,circleLng:this.props.circleLng});}}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps){//prevents useless rerenders when user fidgets with radius slider\nif(nextProps.radius!==this.props.radius){return false;}else{return true;}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Map,{google:this.props.google,zoom:12,style:{width:\"65.8%\",height:\"97%\"},initialCenter:{lat:this.props.currentLocation[0],lng:this.props.currentLocation[1]}},this.displayMarkers(),this.displayPlacesMarkers(),/*#__PURE__*/React.createElement(Marker,{onClick:this.onMarkerClick,key:\"midpoint\",id:\"midpoint\",name:!this.props.coords?/*#__PURE__*/React.createElement(\"h4\",null,\"Midpoint\"):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",null,\"Midpoint\"),/*#__PURE__*/React.createElement(\"h4\",null,this.props.midpoint[0]),/*#__PURE__*/React.createElement(\"h4\",null,this.props.midpoint[1])),position:{lat:this.props.midpoint[0],lng:this.props.midpoint[1]},pos:{lat:this.props.midpoint[0],lng:this.props.midpoint[1]},icon:{url:\"http://maps.google.com/mapfiles/ms/icons/green-dot.png\"}}),/*#__PURE__*/React.createElement(Circle,{radius:parseInt(this.props.radius)*1.7,center:{lat:this.state.circleLat,lng:this.state.circleLng},strokeColor:\"transparent\",strokeOpacity:0,strokeWeight:5,fillColor:\"#FF0000\",fillOpacity:0.2,visible:Boolean(this.props.circleLat)}),/*#__PURE__*/React.createElement(InfoWindow,{marker:this.state.activeMarker,visible:this.state.showingInfoWindow,onClose:this.onClose},/*#__PURE__*/React.createElement(\"div\",null,this.state.selectedPlace.name,this.state.activeMarker.id===\"place\"?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{src:this.state.activeMarker.photo,alt:\"Image Unavailable\"}),/*#__PURE__*/React.createElement(\"h4\",null,\"Rating: \",this.state.activeMarker.rating)):\"\"))));}}]);return MapContainer;}(Component);export default GoogleApiWrapper({apiKey:process.env.REACT_APP_GOOGLE_MAPS_API_KEY})(MapContainer);","map":{"version":3,"sources":["C:/Users/Alex/linq-up/src/components/Map.jsx"],"names":["React","Component","Map","Marker","GoogleApiWrapper","InfoWindow","Circle","require","config","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","currentPhoto","circleLat","props","circleLng","displayMarkers","coords","map","address","index","onMarkerClick","addresses","lat","lng","displayPlacesMarkers","coordsPlaces","placesNames","ratings","photos","i","nearbyPlaces","length","push","geometry","location","name","rating","photo_reference","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","url","marker","setState","onSetMeetupPoint","pos","cleanName","onSetMeetName","onClose","midpoint","prevProps","nextProps","radius","google","width","height","currentLocation","parseInt","Boolean","id","photo","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Map,\r\n  Marker,\r\n  GoogleApiWrapper,\r\n  InfoWindow,\r\n  Circle,\r\n} from \"google-maps-react\";\r\nrequire(\"dotenv\").config();\r\n\r\nexport class MapContainer extends Component {\r\n\r\n  state = {\r\n    showingInfoWindow: false,\r\n    activeMarker: {},\r\n    selectedPlace: {},\r\n    currentPhoto: \"\",\r\n    circleLat: this.props.circleLat,\r\n    circleLng: this.props.circleLng,\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.circleLat !== this.state.circleLat) {\r\n      this.setState({circleLat: this.props.circleLat,circleLng:this.props.circleLng})\r\n    }\r\n  }\r\n\r\n  displayMarkers = () => {\r\n    return this.props.coords.map((address, index) => {\r\n      return (\r\n        <Marker\r\n          onClick={this.onMarkerClick}\r\n          key={index}\r\n          id={index}\r\n          name={<h4>{this.props.addresses[index]}</h4>}\r\n          pos={{\r\n            lat: address.lat,\r\n            lng: address.lng,\r\n          }}\r\n          position={{\r\n            lat: address.lat,\r\n            lng: address.lng,\r\n          }}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  displayPlacesMarkers = () => {\r\n    let coordsPlaces = [];\r\n    let placesNames = [];\r\n    let ratings = [];\r\n    let photos = [];\r\n\r\n    for (let i = 0; i < this.props.nearbyPlaces.length; i++) {\r\n      coordsPlaces.push(this.props.nearbyPlaces[i].geometry.location);\r\n      placesNames.push(this.props.nearbyPlaces[i].name);\r\n      ratings.push(this.props.nearbyPlaces[i].rating);\r\n\r\n      //if this.props.nearbyPlaces.photos[0]\r\n\r\n\r\n      //handles no photo error\r\n      if (this.props.nearbyPlaces[i].photos) {\r\n        photos.push(\r\n          \"https://maps.googleapis.com/maps/api/place/photo?maxwidth=200&maxheight=200&photoreference=\" +\r\n            this.props.nearbyPlaces[i].photos[0].photo_reference +\r\n            \"&key=\" +\r\n            process.env.REACT_APP_GOOGLE_MAPS_API_KEY\r\n        );\r\n      } else {\r\n        photos.push(\"https://static.thenounproject.com/png/1339059-200.png\");\r\n      }\r\n    }\r\n\r\n    return coordsPlaces.map((address, index) => {\r\n      return (\r\n        <Marker\r\n          onClick={this.onMarkerClick}\r\n          photo={photos[index]}\r\n          key={\"p\" + index}\r\n          id={\"place\"}\r\n          rating={ratings[index]}\r\n          name={<h4>{placesNames[index]}</h4>}\r\n          cleanName={placesNames[index]}\r\n          position={{\r\n            lat: address.lat,\r\n            lng: address.lng,\r\n          }}\r\n          pos={{\r\n            lat: address.lat,\r\n            lng: address.lng,\r\n          }}\r\n          icon={{\r\n            url: \"http://maps.google.com/mapfiles/ms/icons/ltblue-dot.png\",\r\n          }}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  onMarkerClick = (props, marker) => {\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n    });\r\n    this.props.onSetMeetupPoint(this.state.activeMarker.pos);\r\n\r\n    if (this.state.activeMarker.cleanName) {\r\n      this.props.onSetMeetName(this.state.activeMarker.cleanName);\r\n    }\r\n  };\r\n\r\n  onClose = (props) => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n      });\r\n      this.props.onSetMeetupPoint({\r\n        lat: this.props.midpoint[0],\r\n        lng: this.props.midpoint[1],\r\n      });\r\n      this.props.onSetMeetName(\"\");\r\n    }\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    //prevents useless rerenders when user fidgets with radius slider\r\n\r\n    if (nextProps.radius !== this.props.radius) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={12}\r\n          style={{\r\n            width: \"65.8%\",\r\n            height: \"97%\",\r\n          }}\r\n          initialCenter={{\r\n            lat: this.props.currentLocation[0],\r\n            lng: this.props.currentLocation[1],\r\n          }}\r\n        >\r\n          {this.displayMarkers()}\r\n          {this.displayPlacesMarkers()}\r\n          <Marker\r\n            onClick={this.onMarkerClick}\r\n            key=\"midpoint\"\r\n            id=\"midpoint\"\r\n            name={\r\n              !this.props.coords ? (\r\n                <h4>Midpoint</h4>\r\n              ) : (\r\n                <div>\r\n                  <h4>Midpoint</h4>\r\n                  <h4>{this.props.midpoint[0]}</h4>\r\n                  <h4>{this.props.midpoint[1]}</h4>\r\n                </div>\r\n              )\r\n            }\r\n            position={{\r\n              lat: this.props.midpoint[0],\r\n              lng: this.props.midpoint[1],\r\n            }}\r\n            pos={{\r\n              lat: this.props.midpoint[0],\r\n              lng: this.props.midpoint[1],\r\n            }}\r\n            icon={{\r\n              url: \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\",\r\n            }}\r\n          ></Marker>\r\n\r\n          <Circle\r\n            radius={parseInt(this.props.radius) * 1.7}\r\n            center={{\r\n              lat: this.state.circleLat,\r\n              lng: this.state.circleLng,\r\n            }}\r\n            strokeColor=\"transparent\"\r\n            strokeOpacity={0}\r\n            strokeWeight={5}\r\n            fillColor=\"#FF0000\"\r\n            fillOpacity={0.2}\r\n            visible={Boolean(this.props.circleLat)}\r\n          ></Circle>\r\n\r\n          <InfoWindow\r\n            marker={this.state.activeMarker}\r\n            visible={this.state.showingInfoWindow}\r\n            onClose={this.onClose}\r\n          >\r\n            <div>\r\n              {this.state.selectedPlace.name}\r\n              {this.state.activeMarker.id === \"place\" ? (\r\n                <div>\r\n                  <img src={this.state.activeMarker.photo} alt=\"Image Unavailable\"></img>\r\n                  <h4>Rating: {this.state.activeMarker.rating}</h4>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </InfoWindow>\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n})(MapContainer);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}