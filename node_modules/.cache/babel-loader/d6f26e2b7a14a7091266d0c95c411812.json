{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\linq-up\\\\src\\\\components\\\\Person.jsx\";\nimport React, { Component } from \"react\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\n\nclass Person extends Component {\n  render() {\n    const s = {\n      container: {\n        color: 'red'\n      },\n      suggestion: {\n        background: 'black'\n      },\n      suggest\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, \"Person #\", this.props.value), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n      onSetAddress: this.props.onSetAddress,\n      onSelect: ({\n        description\n      }) => this.props.onSetAddress(description, this.props.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Person;","map":{"version":3,"sources":["C:/Users/Alex/linq-up/src/components/Person.jsx"],"names":["React","Component","GooglePlacesAutocomplete","Person","render","s","container","color","suggestion","background","suggest","props","value","onSetAddress","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,wBAAP,MAAqC,kCAArC;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC7BG,EAAAA,MAAM,GAAG;AAEP,UAAMC,CAAC,GAAG;AACRC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE;AADE,OADH;AAIRC,MAAAA,UAAU,EAAE;AACVC,QAAAA,UAAU,EAAE;AADF,OAJJ;AAQRC,MAAAA;AARQ,KAAV;AAWA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAa,KAAKC,KAAL,CAAWC,KAAxB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,wBAAD;AACA,MAAA,YAAY,EAAE,KAAKD,KAAL,CAAWE,YADzB;AAEA,MAAA,QAAQ,EAAE,CAAC;AAACC,QAAAA;AAAD,OAAD,KACR,KAAKH,KAAL,CAAWE,YAAX,CAAwBC,WAAxB,EAAqC,KAAKH,KAAL,CAAWC,KAAhD,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CAFF,CADF;AAiBD;;AA/B4B;;AAkC/B,eAAeT,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\r\n\r\nclass Person extends Component {\r\n  render() {\r\n\r\n    const s = {\r\n      container: {\r\n        color: 'red',\r\n      },\r\n      suggestion: {\r\n        background: 'black',\r\n      },\r\n\r\n      suggest\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h4>Person #{this.props.value}</h4>\r\n        <form>\r\n\r\n          <div>\r\n            <GooglePlacesAutocomplete\r\n            onSetAddress={this.props.onSetAddress}\r\n            onSelect={({description}) => (\r\n              this.props.onSetAddress(description, this.props.value)\r\n            )}\r\n            ></GooglePlacesAutocomplete>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Person;\r\n"]},"metadata":{},"sourceType":"module"}