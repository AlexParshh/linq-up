{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\linq-up\\\\src\\\\components\\\\Person.jsx\";\nimport React, { Component } from \"react\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\n\nclass Person extends Component {\n  render() {\n    const s = {\n      container: {\n        color: \"red\"\n      },\n      suggestion: {\n        background: \"black\"\n      },\n      suggestionActive: {\n        background: \"yellow\"\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \"Person #\", this.props.value), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n      onSetAddress: this.props.onSetAddress,\n      onSelect: ({\n        description\n      }) => this.props.onSetAddress(description, this.props.value),\n      suggestionsClassNames: {\n        container: 'custom-container-classname',\n        suggestion: 'custom-suggestion-classname',\n        suggestionActive: 'custom-suggestions-classname--active'\n      },\n      renderSuggestions: (active, suggestions, onSelectSuggestion) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"suggestions-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }\n      }, suggestions.map(suggestion => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"suggestion\",\n        onClick: event => onSelectSuggestion(suggestion, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }\n      }, suggestion.description))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Person;","map":{"version":3,"sources":["C:/Users/Alex/linq-up/src/components/Person.jsx"],"names":["React","Component","GooglePlacesAutocomplete","Person","render","s","container","color","suggestion","background","suggestionActive","props","value","onSetAddress","description","active","suggestions","onSelectSuggestion","map","event"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,wBAAP,MAAqC,kCAArC;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC7BG,EAAAA,MAAM,GAAG;AACP,UAAMC,CAAC,GAAG;AACRC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE;AADE,OADH;AAIRC,MAAAA,UAAU,EAAE;AACVC,QAAAA,UAAU,EAAE;AADF,OAJJ;AAQRC,MAAAA,gBAAgB,EAAE;AAChBD,QAAAA,UAAU,EAAE;AADI;AARV,KAAV;AAaA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAa,KAAKE,KAAL,CAAWC,KAAxB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,wBAAD;AACE,MAAA,YAAY,EAAE,KAAKD,KAAL,CAAWE,YAD3B;AAEE,MAAA,QAAQ,EAAE,CAAC;AAAEC,QAAAA;AAAF,OAAD,KACR,KAAKH,KAAL,CAAWE,YAAX,CAAwBC,WAAxB,EAAqC,KAAKH,KAAL,CAAWC,KAAhD,CAHJ;AAKE,MAAA,qBAAqB,EAAE;AACrBN,QAAAA,SAAS,EAAE,4BADU;AAErBE,QAAAA,UAAU,EAAE,6BAFS;AAGrBE,QAAAA,gBAAgB,EAAE;AAHG,OALzB;AAUE,MAAA,iBAAiB,EAAE,CAACK,MAAD,EAASC,WAAT,EAAsBC,kBAAtB,kBACjB;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,WAAW,CAACE,GAAZ,CAAiBV,UAAD,iBACf;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,OAAO,EAAGW,KAAD,IAAWF,kBAAkB,CAACT,UAAD,EAAaW,KAAb,CAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGX,UAAU,CAACM,WAJd,CADD,CADH,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF;AA8BD;;AA7C4B;;AAgD/B,eAAeX,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\r\n\r\nclass Person extends Component {\r\n  render() {\r\n    const s = {\r\n      container: {\r\n        color: \"red\",\r\n      },\r\n      suggestion: {\r\n        background: \"black\",\r\n      },\r\n\r\n      suggestionActive: {\r\n        background: \"yellow\",\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h4>Person #{this.props.value}</h4>\r\n        <form>\r\n          <GooglePlacesAutocomplete\r\n            onSetAddress={this.props.onSetAddress}\r\n            onSelect={({ description }) =>\r\n              this.props.onSetAddress(description, this.props.value)\r\n            }\r\n            suggestionsClassNames={{\r\n              container: 'custom-container-classname',\r\n              suggestion: 'custom-suggestion-classname',\r\n              suggestionActive: 'custom-suggestions-classname--active',\r\n            }}\r\n            renderSuggestions={(active, suggestions, onSelectSuggestion) => (\r\n              <div className=\"suggestions-container\">\r\n                {suggestions.map((suggestion) => (\r\n                  <div\r\n                    className=\"suggestion\"\r\n                    onClick={(event) => onSelectSuggestion(suggestion, event)}\r\n                  >\r\n                    {suggestion.description}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Person;\r\n"]},"metadata":{},"sourceType":"module"}