{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\linq-up\\\\src\\\\components\\\\Application.jsx\";\nimport React, { Component } from \"react\";\nimport PersonList from \"./PersonList\";\nimport Person from \"./Person\";\nimport fetch from \"cross-fetch\";\nimport MapContainer from \"./Map\";\nimport PlacePicker from \"./PlacePicker\";\nimport DirectionsPicker from \"./DirectionsPicker\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles.css';\nimport Axios from 'axios';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst moment = require('moment');\n\nclass Application extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      people: [/*#__PURE__*/React.createElement(Person, {\n        key: \"1\",\n        value: \"1\",\n        onSetAddress: (e, v) => this.handleSetAddress(e, v),\n        onSetEmail: (e, v) => this.handleSetEmail(e, v),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Person, {\n        key: \"2\",\n        value: \"2\",\n        onSetAddress: (e, v) => this.handleSetAddress(e, v),\n        onSetEmail: (e, v) => this.handleSetEmail(e, v),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Person, {\n        key: \"3\",\n        value: \"3\",\n        onSetAddress: (e, v) => this.handleSetAddress(e, v),\n        onSetEmail: (e, v) => this.handleSetEmail(e, v),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      })],\n      addresses: [\"\", \"\", \"\"],\n      coords: [],\n      midPoint: \"\",\n      currentLocation: [],\n      POI: \"\",\n      radius: \"300\",\n      nearbyPlaces: {},\n      transportOption: null,\n      date: new Date(),\n      meetupPoint: null,\n      travelTimes: [],\n      leaveTimes: [],\n      emails: [\"\", \"\", \"\"],\n      linqupbtnStyle: {\n        display: \"none\"\n      }\n    };\n\n    this.handleSetEmail = (e, v) => {\n      let newEmails = this.state.emails.slice();\n      newEmails[v - 1] = e;\n      this.setState({\n        emails: newEmails\n      });\n    };\n\n    this.handleSetAddress = (e, v) => {\n      let newAddresses = this.state.addresses.slice();\n      newAddresses[v - 1] = e;\n      this.setState({\n        addresses: newAddresses\n      });\n    };\n\n    this.emptyChecker = () => {\n      const a = this.state.addresses;\n\n      for (let i of a) {\n        if (i === \"\") {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.handleAddPerson = () => {\n      this.resetMidPoint();\n      let newEmails = [...this.state.emails, \"\"];\n      let newAddresses = [...this.state.addresses, \"\"];\n      this.setState({\n        addresses: newAddresses,\n        leaveTimes: [],\n        meetupPoint: null,\n        travelTimes: [],\n        nearbyPlaces: {},\n        emails: newEmails\n      });\n      this.setState({\n        people: [...this.state.people, /*#__PURE__*/React.createElement(Person, {\n          key: this.state.people.length + 1,\n          value: this.state.people.length + 1,\n          onSetAddress: (e, v) => this.handleSetAddress(e, v),\n          onSetEmail: (e, v) => this.handleSetEmail(e, v),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }\n        })]\n      });\n    };\n\n    this.handleDeletePerson = () => {\n      let newcoords = this.state.coords.slice(0, -1);\n      this.setState({\n        coords: newcoords,\n        leaveTimes: [],\n        meetupPoint: null,\n        travelTimes: [],\n        nearbyPlaces: {}\n      });\n      this.resetMidPoint();\n      let newEmails = this.state.emails.slice(0, -1);\n      let newAddresses = this.state.addresses.slice(0, -1);\n      this.setState({\n        addresses: newAddresses,\n        emails: newEmails\n      });\n      let people = this.state.people.slice(0, -1);\n      this.setState({\n        people\n      });\n    };\n\n    this.getCoords = async address => {\n      let bod = {\n        address: address\n      };\n      const res = await Axios.post('http://localhost:4000/geolocate', bod);\n      if (res.status !== 200) throw Error(res.body.message);\n      return res.data;\n    };\n\n    this.convertToCoords = async () => {\n      const all = this.state.addresses;\n      let newCoords = [];\n      let a;\n\n      for (let i = 0; i < all.length; i++) {\n        a = await this.getCoords(all[i]);\n        newCoords.push(a);\n      }\n\n      this.setState({\n        coords: newCoords\n      });\n    };\n\n    this.findMidPoint = coordsList => {\n      if (coordsList.length === 2) {\n        let lat1 = coordsList[0].lat * (Math.PI / 180);\n        let lat2 = coordsList[1].lat * (Math.PI / 180);\n        let lon1 = coordsList[0].lng * (Math.PI / 180);\n        let lon2 = coordsList[1].lng * (Math.PI / 180);\n        let bx = Math.cos(lat2) * Math.cos(lon2 - lon1);\n        let by = Math.cos(lat2) * Math.sin(lon2 - lon1);\n        let latMid = Math.atan2(Math.sin(lat1) + Math.sin(lat2), Math.sqrt((Math.cos(lat1) + bx) ** 2) + by ** 2);\n        let lonMid = lon1 + Math.atan2(by, Math.cos(lat1) + bx);\n        return [latMid * (180 / Math.PI), lonMid * (180 / Math.PI)];\n      } //Two or more addresses\n\n\n      const formatter = x => {\n        //Converting from degrees to radians\n        let lat1 = x.lat * (Math.PI / 180);\n        let lon1 = x.lng * (Math.PI / 180); //Converting to cartesian coords\n\n        let x1 = Math.cos(lat1) * Math.cos(lon1);\n        let y1 = Math.cos(lat1) * Math.sin(lon1);\n        let z1 = Math.sin(lat1);\n        return [x1, y1, z1];\n      };\n\n      let formatted = [];\n\n      for (let i of coordsList) {\n        formatted.push(formatter(i));\n      }\n\n      let tmp;\n      let newResult = [];\n\n      for (let i = 0; i < formatted.length; i++) {\n        tmp = 0;\n\n        for (let j of formatted) {\n          tmp += j[i];\n        }\n\n        newResult.push(tmp / formatted.length);\n      } //newResult is now in format[x,y,z]\n\n\n      let lon = Math.atan2(newResult[1], newResult[0]);\n      let hyp = Math.sqrt(newResult[0] ** 2 + newResult[1] ** 2);\n      let lat = Math.atan2(newResult[2], hyp); //converting back to degrees\n\n      lat = lat * (180 / Math.PI);\n      lon = lon * (180 / Math.PI);\n      return [lat, lon];\n    };\n\n    this.calculator = async () => {\n      //check if empty addresses\n      if (this.emptyChecker()) {\n        this.setState({\n          midPoint: \"error\"\n        });\n        return null;\n      }\n\n      if (this.state.addresses.length < 2) {\n        this.setState({\n          midPoint: \"error\"\n        });\n        return null;\n      }\n\n      await this.convertToCoords();\n      let midPoint = await this.findMidPoint(this.state.coords);\n      this.setState({\n        midPoint: midPoint\n      });\n      this.linqupBtnChecker();\n      this.findNearbyPlaces();\n    };\n\n    this.findNearbyPlaces = async () => {\n      if (this.state.POI === \"\") {\n        //if no Point of interest selected\n        let newMeetupPoint = {\n          lat: this.state.midPoint[0],\n          lng: this.state.midPoint[1]\n        };\n        this.setState({\n          meetupPoint: newMeetupPoint\n        });\n        return;\n      }\n\n      const content = {\n        midPoint: this.state.midPoint,\n        radius: this.state.radius,\n        POI: this.state.POI\n      };\n      const res = await Axios.post('http://localhost:4000/nearbyplaces', content);\n      if (res.status !== 200) throw Error(res);\n\n      if (res.data.status === \"ZERO_RESULTS\") {\n        return;\n      } else {\n        this.setState({\n          nearbyPlaces: res.data.results\n        });\n      }\n    };\n\n    this.resetMidPoint = () => {\n      this.setState({\n        midPoint: []\n      });\n    };\n\n    this.setCurrentLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const lattt = position.coords.latitude;\n          const longgg = position.coords.longitude;\n          let newcoords = [lattt, longgg];\n          this.setState({\n            currentLocation: newcoords\n          });\n        });\n      }\n    };\n\n    this.handleSetPOI = e => {\n      this.setState({\n        POI: e\n      });\n\n      if (e === \"\") {\n        this.setState({\n          nearbyPlaces: {}\n        });\n      }\n    };\n\n    this.getPlaces = () => {\n      if (this.state.POI === \"\") {\n        return null;\n      }\n    };\n\n    this.handleSetRadius = e => {\n      this.setState({\n        radius: e\n      });\n    };\n\n    this.handleSetTransport = e => {\n      let l;\n\n      if (e === \"bike\") {\n        l = \"bicycling\";\n      } else if (e === \"car\") {\n        l = \"driving\";\n      } else if (e === \"walk\") {\n        l = \"walking\";\n      } else {\n        l = \"transit\";\n      }\n\n      this.setState({\n        transportOption: l\n      });\n    };\n\n    this.handleSetDate = date => {\n      this.setState({\n        date\n      });\n    };\n\n    this.handleSetMeetupPoint = loc => {\n      this.setState({\n        meetupPoint: loc\n      });\n    };\n\n    this.getTravelTimes = async () => {\n      if (this.state.meetupPoint === null) {\n        let newMeetupPoint = {\n          lat: this.state.midPoint[0],\n          lng: this.state.midPoint[1]\n        };\n        this.setState({\n          meetupPoint: newMeetupPoint\n        });\n      }\n\n      if (this.state.midPoint === \"error\" || this.state.addresses.length === 0) {\n        return;\n      }\n\n      let targetLat = this.state.meetupPoint.lat;\n      let targetLon = this.state.meetupPoint.lng;\n      let travelTimes = [];\n      let originLat, originLon, time, travelMode, content;\n\n      if (this.state.transportOption === null) {\n        //defaults to driving if nothing was selected\n        travelMode = \"driving\";\n      } else {\n        travelMode = this.state.transportOption;\n      }\n\n      for (let i = 0; i < this.state.coords.length; i++) {\n        originLat = this.state.coords[i].lat;\n        originLon = this.state.coords[i].lng;\n        content = {\n          targetLat: targetLat,\n          targetLon: targetLon,\n          originLat: originLat,\n          originLon: originLon,\n          travelMode: travelMode\n        };\n        time = await Axios.post('http://localhost:4000/traveltime', content);\n        travelTimes.push(time.data.routes[0].legs[0].duration);\n      }\n\n      this.setState({\n        travelTimes\n      });\n      this.getLeaveTimes();\n    };\n\n    this.getLeaveTimes = () => {\n      let travelTimes = this.state.travelTimes;\n      let arrivalTime = moment(this.state.date);\n      let leaveTimes = [];\n      let current;\n\n      for (let i = 0; i < travelTimes.length; i++) {\n        current = arrivalTime.clone().subtract(travelTimes[i].value, \"seconds\");\n        current = current.format(\"LLL\");\n        leaveTimes.push(current);\n      }\n\n      this.setState({\n        leaveTimes\n      });\n    };\n\n    this.sendEmails = () => {\n      let emails = this.state.emails;\n      let leaveTimes = this.state.leaveTimes;\n      let coords = this.state.coords;\n      let meetupPoint = this.state.meetupPoint;\n      let text, email, content;\n\n      for (let i = 0; i < leaveTimes.length; i++) {\n        text = \"This is a reminder to linq up!\\nIn order to arrive at the linq up point, please depart at the following time:\\n\";\n        text += leaveTimes[i] + \"\\n\";\n        text += \"The directions to your destination can be found using this link\\n\";\n        text += \"https://www.google.com/maps/dir/\" + coords[i].lat + \",\" + coords[i].lng + \"/\" + meetupPoint.lat + \",\" + meetupPoint.lng + \"/\";\n        email = emails[i];\n        content = {\n          to: email,\n          text: text\n        };\n        Axios.post('http://localhost:4000/sendemail', content);\n      }\n    };\n\n    this.linqupBtnChecker = () => {\n      let emails = this.state.emails;\n      const newStyle = {\n        display: \"inline\"\n      };\n      let valid = true;\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; //validating all emails before displaying linq up button to prevent email errors\n\n      for (let i = 0; i < emails.length; i++) {\n        if (!re.test(String(emails[i]).toLowerCase())) {\n          valid = false;\n        }\n      }\n\n      if (valid) {\n        this.setState({\n          linqupbtnStyle: newStyle\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setCurrentLocation();\n  }\n\n  async getTime(link) {\n    const res = await fetch(link);\n    const data = await res.json();\n    return data.routes[0].legs[0].duration;\n  }\n\n  render() {\n    const toggle = () => setModal(!modal);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }\n    }, \"Linq up\")), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }\n    }, \"Modal title\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }\n    }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(PlacePicker, {\n      onSetRadius: e => this.handleSetRadius(e),\n      onSetPOI: e => this.handleSetPOI(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DirectionsPicker, {\n      onSetTransport: e => this.handleSetTransport(e),\n      onSetDate: date => this.handleSetDate(date),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(PersonList, {\n      people: this.state.people,\n      onAddPerson: () => this.handleAddPerson(),\n      onDeletePerson: () => this.handleDeletePerson(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttonholder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-secondary\",\n      onClick: this.calculator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 11\n      }\n    }, \"Calculate\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttonholder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: this.state.linqupbtnStyle,\n      className: \"btn btn-outline-warning\",\n      onClick: this.getTravelTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 39\n      }\n    }, \"Linq up!\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.sendEmails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 14\n      }\n    }, \"SEND EMAIL\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MapContainer, {\n      POI: this.state.POI,\n      addresses: this.state.addresses,\n      currentLocation: this.state.currentLocation,\n      coords: this.state.coords,\n      midpoint: this.state.midPoint,\n      radius: this.state.radius,\n      nearbyPlaces: this.state.nearbyPlaces,\n      onSetMeetupPoint: loc => this.handleSetMeetupPoint(loc),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Application;","map":{"version":3,"sources":["C:/Users/Alex/linq-up/src/components/Application.jsx"],"names":["React","Component","PersonList","Person","fetch","MapContainer","PlacePicker","DirectionsPicker","Axios","Button","Modal","ModalHeader","ModalBody","ModalFooter","moment","require","Application","state","people","e","v","handleSetAddress","handleSetEmail","addresses","coords","midPoint","currentLocation","POI","radius","nearbyPlaces","transportOption","date","Date","meetupPoint","travelTimes","leaveTimes","emails","linqupbtnStyle","display","newEmails","slice","setState","newAddresses","emptyChecker","a","i","handleAddPerson","resetMidPoint","length","handleDeletePerson","newcoords","getCoords","address","bod","res","post","status","Error","body","message","data","convertToCoords","all","newCoords","push","findMidPoint","coordsList","lat1","lat","Math","PI","lat2","lon1","lng","lon2","bx","cos","by","sin","latMid","atan2","sqrt","lonMid","formatter","x","x1","y1","z1","formatted","tmp","newResult","j","lon","hyp","calculator","linqupBtnChecker","findNearbyPlaces","newMeetupPoint","content","results","setCurrentLocation","navigator","geolocation","getCurrentPosition","position","lattt","latitude","longgg","longitude","handleSetPOI","getPlaces","handleSetRadius","handleSetTransport","l","handleSetDate","handleSetMeetupPoint","loc","getTravelTimes","targetLat","targetLon","originLat","originLon","time","travelMode","routes","legs","duration","getLeaveTimes","arrivalTime","current","clone","subtract","value","format","sendEmails","text","email","to","newStyle","valid","re","test","String","toLowerCase","componentDidMount","getTime","link","json","render","toggle","setModal","modal","className"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PersonList from \"./PersonList\";\r\nimport Person from \"./Person\";\r\nimport fetch from \"cross-fetch\";\r\nimport MapContainer from \"./Map\";\r\nimport PlacePicker from \"./PlacePicker\";\r\nimport DirectionsPicker from \"./DirectionsPicker\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './styles.css'\r\nimport Axios from 'axios';\r\nimport {Button,Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nconst moment = require('moment');\r\n\r\nclass Application extends Component {\r\n  state = {\r\n    people: [\r\n      <Person\r\n        key=\"1\"\r\n        value=\"1\"\r\n        onSetAddress={(e, v) => this.handleSetAddress(e, v)}\r\n        onSetEmail={(e, v) => this.handleSetEmail(e, v)}\r\n      ></Person>,\r\n      <Person\r\n        key=\"2\"\r\n        value=\"2\"\r\n        onSetAddress={(e, v) => this.handleSetAddress(e, v)}\r\n        onSetEmail={(e, v) => this.handleSetEmail(e, v)}\r\n      ></Person>,\r\n      <Person\r\n        key=\"3\"\r\n        value=\"3\"\r\n        onSetAddress={(e, v) => this.handleSetAddress(e, v)}\r\n        onSetEmail={(e, v) => this.handleSetEmail(e, v)}\r\n      ></Person>,\r\n    ],\r\n    addresses: [\"\", \"\", \"\"],\r\n\r\n    coords: [],\r\n\r\n    midPoint: \"\",\r\n\r\n    currentLocation: [],\r\n\r\n    POI: \"\",\r\n\r\n    radius: \"300\",\r\n\r\n    nearbyPlaces: {},\r\n\r\n    transportOption: null,\r\n\r\n    date: new Date(),\r\n\r\n    meetupPoint: null,\r\n\r\n    travelTimes: [],\r\n\r\n    leaveTimes: [],\r\n\r\n    emails: [\"\",\"\",\"\"],\r\n\r\n    linqupbtnStyle: {display:\"none\"}\r\n\r\n\r\n  };\r\n\r\n  handleSetEmail = (e, v) => {\r\n    let newEmails = this.state.emails.slice();\r\n    newEmails[v - 1] = e;\r\n    this.setState({emails:newEmails})\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setCurrentLocation();\r\n  }\r\n\r\n  handleSetAddress = (e, v) => {\r\n    let newAddresses = this.state.addresses.slice();\r\n    newAddresses[v - 1] = e;\r\n    this.setState({ addresses: newAddresses });\r\n  };\r\n\r\n  emptyChecker = () => {\r\n    const a = this.state.addresses;\r\n\r\n    for (let i of a) {\r\n      if (i === \"\") {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  handleAddPerson = () => {\r\n    this.resetMidPoint();\r\n    let newEmails = [...this.state.emails,\"\"];\r\n    let newAddresses = [...this.state.addresses, \"\"];\r\n    this.setState({ addresses: newAddresses,\r\n    leaveTimes: [],\r\n    meetupPoint: null,\r\n    travelTimes: [],\r\n    nearbyPlaces: {},\r\n    emails:newEmails,\r\n\r\n   });\r\n    this.setState({\r\n      people: [\r\n        ...this.state.people,\r\n        <Person\r\n          key={this.state.people.length + 1}\r\n          value={this.state.people.length + 1}\r\n          onSetAddress={(e, v) => this.handleSetAddress(e, v)}\r\n          onSetEmail={(e, v) => this.handleSetEmail(e, v)}\r\n        ></Person>,\r\n      ],\r\n    });\r\n  };\r\n\r\n  handleDeletePerson = () => {\r\n    let newcoords = this.state.coords.slice(0, -1);\r\n    this.setState({ coords: newcoords,\r\n      leaveTimes: [],\r\n      meetupPoint: null,\r\n      travelTimes: [],\r\n      nearbyPlaces: {} });\r\n\r\n    this.resetMidPoint();\r\n    let newEmails = this.state.emails.slice(0, -1);\r\n    let newAddresses = this.state.addresses.slice(0, -1);\r\n    this.setState({ addresses: newAddresses,\r\n    emails:newEmails });\r\n    let people = this.state.people.slice(0, -1);\r\n    this.setState({people});\r\n  };\r\n\r\n  getCoords = async (address) => {\r\n\r\n    let bod = {address:address}\r\n    const res = await Axios.post('http://localhost:4000/geolocate', bod)\r\n\r\n    if (res.status!== 200) throw Error(res.body.message);\r\n\r\n    return res.data;\r\n  }\r\n\r\n  convertToCoords = async () => {\r\n    const all = this.state.addresses;\r\n\r\n    let newCoords = [];\r\n    let a;\r\n\r\n    for (let i = 0; i < all.length; i++) {\r\n\r\n      a = await this.getCoords(all[i]);\r\n      newCoords.push(a);\r\n    }\r\n\r\n    this.setState({ coords: newCoords });\r\n  };\r\n\r\n  findMidPoint = (coordsList) => {\r\n    if (coordsList.length === 2) {\r\n      let lat1 = coordsList[0].lat * (Math.PI / 180);\r\n      let lat2 = coordsList[1].lat * (Math.PI / 180);\r\n      let lon1 = coordsList[0].lng * (Math.PI / 180);\r\n      let lon2 = coordsList[1].lng * (Math.PI / 180);\r\n\r\n      let bx = Math.cos(lat2) * Math.cos(lon2 - lon1);\r\n      let by = Math.cos(lat2) * Math.sin(lon2 - lon1);\r\n\r\n      let latMid = Math.atan2(\r\n        Math.sin(lat1) + Math.sin(lat2),\r\n        Math.sqrt((Math.cos(lat1) + bx) ** 2) + by ** 2\r\n      );\r\n      let lonMid = lon1 + Math.atan2(by, Math.cos(lat1) + bx);\r\n\r\n      return [latMid * (180 / Math.PI), lonMid * (180 / Math.PI)];\r\n    }\r\n\r\n    //Two or more addresses\r\n\r\n    const formatter = (x) => {\r\n      //Converting from degrees to radians\r\n      let lat1 = x.lat * (Math.PI / 180);\r\n      let lon1 = x.lng * (Math.PI / 180);\r\n      //Converting to cartesian coords\r\n\r\n      let x1 = Math.cos(lat1) * Math.cos(lon1);\r\n      let y1 = Math.cos(lat1) * Math.sin(lon1);\r\n      let z1 = Math.sin(lat1);\r\n\r\n      return [x1, y1, z1];\r\n    };\r\n\r\n    let formatted = [];\r\n\r\n    for (let i of coordsList) {\r\n      formatted.push(formatter(i));\r\n    }\r\n\r\n    let tmp;\r\n    let newResult = [];\r\n\r\n    for (let i = 0; i < formatted.length; i++) {\r\n      tmp = 0;\r\n      for (let j of formatted) {\r\n        tmp += j[i];\r\n      }\r\n\r\n      newResult.push(tmp / formatted.length);\r\n    }\r\n\r\n    //newResult is now in format[x,y,z]\r\n\r\n    let lon = Math.atan2(newResult[1], newResult[0]);\r\n    let hyp = Math.sqrt(newResult[0] ** 2 + newResult[1] ** 2);\r\n    let lat = Math.atan2(newResult[2], hyp);\r\n\r\n    //converting back to degrees\r\n    lat = lat * (180 / Math.PI);\r\n    lon = lon * (180 / Math.PI);\r\n\r\n    return [lat, lon];\r\n  };\r\n\r\n  calculator = async () => {\r\n    //check if empty addresses\r\n    if (this.emptyChecker()) {\r\n      this.setState({ midPoint: \"error\" });\r\n      return null;\r\n    }\r\n\r\n    if (this.state.addresses.length < 2) {\r\n      this.setState({ midPoint: \"error\" });\r\n      return null;\r\n    }\r\n    await this.convertToCoords();\r\n    let midPoint = await this.findMidPoint(this.state.coords);\r\n    this.setState({ midPoint: midPoint });\r\n    this.linqupBtnChecker()\r\n    this.findNearbyPlaces();\r\n  };\r\n\r\n  findNearbyPlaces = async () => {\r\n\r\n    if (this.state.POI === \"\") {\r\n      //if no Point of interest selected\r\n      let newMeetupPoint = {lat:this.state.midPoint[0],lng:this.state.midPoint[1]};\r\n      this.setState({meetupPoint:newMeetupPoint});\r\n      return\r\n    }\r\n\r\n    const content = {midPoint:this.state.midPoint,radius:this.state.radius,POI:this.state.POI}\r\n\r\n    const res = await Axios.post('http://localhost:4000/nearbyplaces', content)\r\n\r\n\r\n    if (res.status!== 200) throw Error(res);\r\n\r\n    if (res.data.status === \"ZERO_RESULTS\") {\r\n      return\r\n    } else {\r\n      this.setState({nearbyPlaces: res.data.results});\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  resetMidPoint = () => {\r\n    this.setState({ midPoint: [] });\r\n  };\r\n\r\n  setCurrentLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        const lattt = position.coords.latitude;\r\n        const longgg = position.coords.longitude;\r\n\r\n        let newcoords = [lattt, longgg];\r\n\r\n        this.setState({ currentLocation: newcoords });\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  handleSetPOI = (e) => {\r\n    this.setState({ POI: e });\r\n    if (e === \"\") {\r\n      this.setState({nearbyPlaces:{}})\r\n    }\r\n  };\r\n\r\n  getPlaces = () => {\r\n\r\n    if (this.state.POI === \"\") {\r\n      return null;\r\n    } \r\n\r\n  }\r\n\r\n  handleSetRadius = (e) => {\r\n\r\n    this.setState({radius:e});\r\n  }\r\n\r\n  handleSetTransport = (e) => {\r\n    let l;\r\n    if (e ===\"bike\") {\r\n      l = \"bicycling\"\r\n    } else if (e===\"car\") {\r\n      l=\"driving\"\r\n    } else if (e===\"walk\") {\r\n      l=\"walking\"\r\n    } else {\r\n      l = \"transit\"\r\n    }\r\n \r\n\r\n    this.setState({transportOption:l})\r\n  }\r\n\r\n  handleSetDate = (date) => {\r\n    this.setState({date})\r\n  }\r\n\r\n  handleSetMeetupPoint = (loc) => {\r\n    this.setState({meetupPoint:loc})\r\n  }\r\n\r\n  async getTime(link) {\r\n    const res = await fetch(link);\r\n    const data = await res.json();\r\n\r\n    return data.routes[0].legs[0].duration\r\n  }\r\n\r\n\r\n  getTravelTimes = async () => {\r\n\r\n    if (this.state.meetupPoint === null) {\r\n      let newMeetupPoint = {lat:this.state.midPoint[0],lng:this.state.midPoint[1]};\r\n      this.setState({meetupPoint:newMeetupPoint});\r\n    } \r\n    \r\n    if (this.state.midPoint === \"error\" || this.state.addresses.length === 0) {\r\n      return\r\n    }\r\n\r\n\r\n    let targetLat=this.state.meetupPoint.lat\r\n    let targetLon=this.state.meetupPoint.lng\r\n\r\n\r\n    let travelTimes = [];\r\n\r\n    let originLat, originLon, time, travelMode, content;\r\n\r\n    if (this.state.transportOption === null) {\r\n      //defaults to driving if nothing was selected\r\n      travelMode = \"driving\"\r\n    } else {\r\n      travelMode = this.state.transportOption;\r\n    }\r\n\r\n    \r\n    for (let i =0;i<this.state.coords.length;i++){\r\n\r\n      originLat = this.state.coords[i].lat\r\n      originLon = this.state.coords[i].lng\r\n\r\n      content = {targetLat:targetLat, targetLon:targetLon, originLat:originLat, originLon:originLon, travelMode:travelMode };\r\n\r\n      time = await Axios.post('http://localhost:4000/traveltime',content)\r\n\r\n      travelTimes.push(time.data.routes[0].legs[0].duration)\r\n    }\r\n\r\n\r\n    this.setState({travelTimes})\r\n\r\n    this.getLeaveTimes()\r\n\r\n  }\r\n  \r\n  getLeaveTimes = () => {\r\n\r\n    let travelTimes = this.state.travelTimes;\r\n    let arrivalTime = moment(this.state.date);\r\n    let leaveTimes = [];\r\n\r\n    let current;\r\n\r\n    for (let i =0; i<travelTimes.length;i++) {\r\n      current = arrivalTime.clone().subtract(travelTimes[i].value, \"seconds\");\r\n      current = current.format(\"LLL\")\r\n      leaveTimes.push(current)\r\n\r\n    }\r\n\r\n   \r\n\r\n    this.setState({leaveTimes})\r\n\r\n  }\r\n\r\n\r\n  sendEmails = () => {\r\n\r\n    let emails = this.state.emails;\r\n    let leaveTimes = this.state.leaveTimes;\r\n    let coords = this.state.coords;\r\n    let meetupPoint = this.state.meetupPoint;\r\n\r\n    let text,email,content;\r\n\r\n    for (let i = 0; i<leaveTimes.length;i++) {\r\n      text = \"This is a reminder to linq up!\\nIn order to arrive at the linq up point, please depart at the following time:\\n\";\r\n      text+=(leaveTimes[i]+\"\\n\");\r\n      text+=\"The directions to your destination can be found using this link\\n\";\r\n      text+=(\"https://www.google.com/maps/dir/\"+coords[i].lat+\",\"+coords[i].lng+\"/\"+meetupPoint.lat+\",\"+meetupPoint.lng+\"/\")\r\n      \r\n      email = emails[i]\r\n\r\n      content = {to:email,text:text}\r\n      Axios.post('http://localhost:4000/sendemail', content)\r\n\r\n    }\r\n\r\n  }\r\n\r\n  linqupBtnChecker = () => {\r\n\r\n    let emails = this.state.emails;\r\n    const newStyle = {display:\"inline\"};\r\n    let valid = true;\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    //validating all emails before displaying linq up button to prevent email errors\r\n    for (let i = 0;i<emails.length;i++) {\r\n      if (!re.test(String(emails[i]).toLowerCase())) {\r\n        valid = false;\r\n      }\r\n\r\n    }\r\n\r\n\r\n    if (valid) {\r\n      this.setState({linqupbtnStyle:newStyle});\r\n    }\r\n\r\n  }\r\n\r\n\r\n  \r\n\r\n  render() {\r\n\r\n    \r\n    const toggle = () => setModal(!modal);\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"jumbotron\">\r\n          <h1 className=\"display-3\">Linq up</h1>\r\n          </div>\r\n\r\n          <button></button>\r\n          <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\r\n        <ModalBody>\r\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n        </ModalBody>\r\n        <ModalFooter>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n        <div>\r\n          <PlacePicker \r\n          onSetRadius={(e) => this.handleSetRadius(e)}\r\n          onSetPOI={(e) => this.handleSetPOI(e)}></PlacePicker>\r\n        </div>\r\n\r\n        <div>\r\n          <DirectionsPicker\r\n          onSetTransport={(e) => this.handleSetTransport(e)}\r\n          onSetDate = {(date) => this.handleSetDate(date)}\r\n          ></DirectionsPicker>\r\n        </div>\r\n        \r\n        <div>\r\n          <PersonList\r\n            people={this.state.people}\r\n            onAddPerson={() => this.handleAddPerson()}\r\n            onDeletePerson={() => this.handleDeletePerson()}\r\n          ></PersonList>\r\n        </div>\r\n\r\n        <div className=\"buttonholder\">\r\n          <button className=\"btn btn-outline-secondary\" onClick={this.calculator}>Calculate</button>\r\n        </div>\r\n\r\n        <div className=\"buttonholder\"><button style={this.state.linqupbtnStyle} className=\"btn btn-outline-warning\" onClick={this.getTravelTimes}>Linq up!</button></div>\r\n\r\n        <div><button onClick={this.sendEmails}>SEND EMAIL</button></div>\r\n\r\n        <div>\r\n          <MapContainer\r\n            POI={this.state.POI}\r\n            addresses={this.state.addresses}\r\n            currentLocation={this.state.currentLocation}\r\n            coords={this.state.coords}\r\n            midpoint={this.state.midPoint}\r\n            radius={this.state.radius}\r\n            nearbyPlaces={this.state.nearbyPlaces}\r\n            onSetMeetupPoint={(loc) => this.handleSetMeetupPoint(loc)}\r\n          ></MapContainer>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Application;"]},"metadata":{},"sourceType":"module"}