{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\linq-up\\\\src\\\\components\\\\Person.jsx\";\nimport React, { Component } from \"react\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\n\nclass Person extends Component {\n  render() {\n    const renderFunc = ({\n      getInputProps,\n      getSuggestionItemProps,\n      suggestions\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete-root\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 19\n      }\n    }, \"Loading...\"), suggestions.map(suggestion => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, suggestion.description)))));\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"Person #\", this.props.value)), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n      style: {\n        width: \"500px\"\n      },\n      apiKey: \"AIzaSyAF6LzDWnCO0yQ3_xVfXMYicN6MqUFl4q0\",\n      onSetAddress: this.props.onSetAddress,\n      onSelect: ({\n        description\n      }) => this.props.onSetAddress(description, this.props.value),\n      renderSuggestions: (active, suggestions, onSelectSuggestion) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }, suggestions.map((suggestion, idx) => /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          width: \"300px\"\n        },\n        type: \"button\",\n        key: idx,\n        className: \"list-group-item list-group-item-action\",\n        onClick: event => onSelectSuggestion(suggestion, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }\n      }, suggestion.description))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"500px\"\n      },\n      type: \"text\",\n      placeholder: \"email\",\n      onChange: e => this.props.onSetEmail(e.target.value, this.props.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Person;","map":{"version":3,"sources":["C:/Users/Alex/linq-up/src/components/Person.jsx"],"names":["React","Component","GooglePlacesAutocomplete","Person","render","renderFunc","getInputProps","getSuggestionItemProps","suggestions","loading","map","suggestion","description","props","value","width","onSetAddress","active","onSelectSuggestion","idx","event","e","onSetEmail","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\r\n\r\n\r\n\r\nclass Person extends Component {\r\n  render() {\r\n    \r\n    const renderFunc = ({ getInputProps, getSuggestionItemProps, suggestions }) => (\r\n  <div className=\"autocomplete-root\">\r\n    <input {...getInputProps()} />\r\n    <div className=\"autocomplete-dropdown-container\">\r\n      {loading && <div>Loading...</div>}\r\n      {suggestions.map(suggestion => (\r\n        <div {...getSuggestionItemProps(suggestion)}>\r\n          <span>{suggestion.description}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\n    return (\r\n      <div>\r\n        <h4><span className=\"badge badge-info\">Person #{this.props.value}</span></h4>\r\n\r\n\r\n\r\n        <form>\r\n          \r\n          <GooglePlacesAutocomplete\r\n            style={{width:\"500px\"}}\r\n            apiKey={\"AIzaSyAF6LzDWnCO0yQ3_xVfXMYicN6MqUFl4q0\"}\r\n            onSetAddress={this.props.onSetAddress}\r\n            onSelect={({ description }) =>\r\n              this.props.onSetAddress(description, this.props.value)\r\n            }\r\n            renderSuggestions={(active, suggestions, onSelectSuggestion) => (\r\n              <div className=\"list-group\">\r\n                {suggestions.map((suggestion,idx) => (\r\n                  <button\r\n                    style={{width:\"300px\"}}\r\n                    type=\"button\"\r\n                    key={idx}\r\n                    className=\"list-group-item list-group-item-action\"\r\n                    onClick={(event) => onSelectSuggestion(suggestion, event)}\r\n                  >\r\n                    {suggestion.description}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n          ><div><input></input></div></GooglePlacesAutocomplete>\r\n          <input style={{width:\"500px\"}}type=\"text\" placeholder=\"email\" onChange={(e) => this.props.onSetEmail(e.target.value,this.props.value)}></input>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Person;\r\n"]},"metadata":{},"sourceType":"module"}